name: zotlease-frontend-build-deploy

on:
  workflow_dispatch:
    inputs:
      environ:
        description: 'Environment'
        required: true
        default: 'beta'

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'
    
    - name: Build, Tag, and Push the Frontend Image to Amazon ECR
      id: build-frontend-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: zotlease/frontend
        IMAGE_TAG:  ${{ github.event.inputs.environ == 'beta' && 'latest' || github.sha }}
      run: |
        cd frontend
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Retrieve API URL from Lightsail
      id: get_api_url
      run: |
        api_url=$(aws lightsail get-container-services --service-name zotlease-api --query 'containerServices[0].publicDomainNames' --output text)
        echo"$api_url"
        echo "API_URL=$api_url" >> $GITHUB_ENV

    - name: Retrieve MAPBOX_KEY from Secrets Manager
      id: get_mapbox_key
      run: |
        secret=$(aws secretsmanager get-secret-value --secret-id MAPBOX_KEY --query SecretString --output text)
        echo "MAPBOX_KEY=$secret" >> $GITHUB_ENV
        
    - name: Create Lightsail Container Service if not exists
      run: |
        aws lightsail create-container-service \
        --service-name zotlease-frontend \
        --power nano \
        --scale 1 || true
    
    - name: Deploy to AWS Lightsail
      env:
        VITE_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        VITE_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        VITE_AWS_REGION: us-east-1
        IMAGE_TAG: ${{ github.event.inputs.environ == 'beta' && 'latest' || github.sha }}
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: zotlease/frontend
        MY_SECRET: ${{ env.MY_SECRET }}
        VITE_MAPBOX_TOKEN: ${{ env.MAPBOX_KEY }}
        VITE_ENV: beta
        VITE_API_URL: ${{ env.API_URL }}


      run: |
        aws lightsail create-container-service-deployment \
        --service-name zotlease-frontend \
        --containers "frontend={image=$REGISTRY/$REPOSITORY:$IMAGE_TAG,ports={5173=HTTP},environment={VITE_API_URL=\"$VITE_API_URL\",VITE_AWS_REGION=\"$VITE_AWS_REGION\",VITE_AWS_ACCESS_KEY_ID=\"$VITE_AWS_ACCESS_KEY_ID\",VITE_AWS_SECRET_ACCESS_KEY=\"$VITE_AWS_SECRET_ACCESS_KEY\",VITE_ENV=\"$VITE_ENV\",VITE_MAPBOX_TOKEN=\"$VITE_MAPBOX_TOKEN\"}}" \
        --public-endpoint "containerName=frontend,containerPort=5173" \

