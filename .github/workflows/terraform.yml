name: Terraform CI/CD

on:
  workflow_dispatch:

jobs:
  create_s3_bucket:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create S3 Bucket if not exists
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        if ! aws s3api head-bucket --bucket zotlease-tf-state 2>/dev/null; then
          aws s3api create-bucket --bucket zotlease-tf-state --region us-east-1 --create-bucket-configuration LocationConstraint=us-east-1
          aws s3api put-bucket-encryption --bucket zotlease-tf-state --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}'
        else
          echo "Bucket already exists"
        fi

  terraform:
    runs-on: ubuntu-latest
    needs: create_s3_bucket

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform init
      working-directory: ./iac

    - name: Terraform Apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform apply -auto-approve
      working-directory: ./iac